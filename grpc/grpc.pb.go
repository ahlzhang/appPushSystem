// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

/*
Package grpc is a generated protocol buffer package.

指定包名

It is generated from these files:
	grpc.proto

It has these top-level messages:
	RequestParam
	RequestResult
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestParam struct {
	Code  int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Param string `protobuf:"bytes,2,opt,name=param" json:"param,omitempty"`
}

func (m *RequestParam) Reset()                    { *m = RequestParam{} }
func (m *RequestParam) String() string            { return proto.CompactTextString(m) }
func (*RequestParam) ProtoMessage()               {}
func (*RequestParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestParam) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RequestParam) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

type RequestResult struct {
	Success      int32  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	ErrorCode    int32  `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=errorMessage" json:"errorMessage,omitempty"`
	Result       string `protobuf:"bytes,4,opt,name=result" json:"result,omitempty"`
}

func (m *RequestResult) Reset()                    { *m = RequestResult{} }
func (m *RequestResult) String() string            { return proto.CompactTextString(m) }
func (*RequestResult) ProtoMessage()               {}
func (*RequestResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestResult) GetSuccess() int32 {
	if m != nil {
		return m.Success
	}
	return 0
}

func (m *RequestResult) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *RequestResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *RequestResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestParam)(nil), "grpc.RequestParam")
	proto.RegisterType((*RequestResult)(nil), "grpc.RequestResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for PushRequest service

type PushRequestClient interface {
	// 定义SayHello方法
	PushServiceRequest(ctx context.Context, in *RequestParam, opts ...grpc1.CallOption) (*RequestResult, error)
}

type pushRequestClient struct {
	cc *grpc1.ClientConn
}

func NewPushRequestClient(cc *grpc1.ClientConn) PushRequestClient {
	return &pushRequestClient{cc}
}

func (c *pushRequestClient) PushServiceRequest(ctx context.Context, in *RequestParam, opts ...grpc1.CallOption) (*RequestResult, error) {
	out := new(RequestResult)
	err := grpc1.Invoke(ctx, "/grpc.PushRequest/PushServiceRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PushRequest service

type PushRequestServer interface {
	// 定义SayHello方法
	PushServiceRequest(context.Context, *RequestParam) (*RequestResult, error)
}

func RegisterPushRequestServer(s *grpc1.Server, srv PushRequestServer) {
	s.RegisterService(&_PushRequest_serviceDesc, srv)
}

func _PushRequest_PushServiceRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushRequestServer).PushServiceRequest(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.PushRequest/PushServiceRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushRequestServer).PushServiceRequest(ctx, req.(*RequestParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushRequest_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.PushRequest",
	HandlerType: (*PushRequestServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "PushServiceRequest",
			Handler:    _PushRequest_PushServiceRequest_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4f, 0xc4, 0x30,
	0x0c, 0x85, 0xc9, 0xd1, 0x3b, 0x74, 0xe6, 0x58, 0x0c, 0x42, 0x11, 0x62, 0xa8, 0x32, 0x75, 0xea,
	0x00, 0x0b, 0x1b, 0x03, 0x33, 0xa8, 0x0a, 0xbf, 0xa0, 0x04, 0xab, 0x20, 0x81, 0x52, 0xec, 0x86,
	0x3f, 0xc0, 0x1f, 0x47, 0x71, 0x53, 0x41, 0x37, 0x7f, 0xef, 0xc9, 0x79, 0x79, 0x06, 0x18, 0x78,
	0x0c, 0xed, 0xc8, 0x71, 0x8a, 0x58, 0xe5, 0xd9, 0xdd, 0xc1, 0xc1, 0xd3, 0x57, 0x22, 0x99, 0xba,
	0x9e, 0xfb, 0x4f, 0x44, 0xa8, 0x42, 0x7c, 0x25, 0x6b, 0x6a, 0xd3, 0x6c, 0xbd, 0xce, 0x78, 0x01,
	0xdb, 0x31, 0x9b, 0x76, 0x53, 0x9b, 0x66, 0xef, 0x67, 0x70, 0x3f, 0x06, 0xce, 0xca, 0xaa, 0x27,
	0x49, 0x1f, 0x13, 0x5a, 0x38, 0x91, 0x14, 0x02, 0x89, 0x94, 0xf5, 0x05, 0xf1, 0x1a, 0xf6, 0xc4,
	0x1c, 0xf9, 0x21, 0x3f, 0xbd, 0x51, 0xef, 0x4f, 0x40, 0x07, 0x07, 0x85, 0x47, 0x12, 0xe9, 0x07,
	0xb2, 0xc7, 0x1a, 0xb3, 0xd2, 0xf0, 0x12, 0x76, 0xac, 0x29, 0xb6, 0x52, 0xb7, 0xd0, 0xcd, 0x13,
	0x9c, 0x76, 0x49, 0xde, 0xca, 0x47, 0xf0, 0x1e, 0x30, 0xe3, 0x33, 0xf1, 0xf7, 0x7b, 0xa0, 0x45,
	0xc5, 0x56, 0x7b, 0xff, 0x2f, 0x7a, 0x75, 0xbe, 0xd2, 0xe6, 0x06, 0xee, 0xe8, 0x65, 0xa7, 0xc7,
	0xb9, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xba, 0x49, 0xa6, 0x2a, 0x01, 0x00, 0x00,
}
